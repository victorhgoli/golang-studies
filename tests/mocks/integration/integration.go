// Code generated by MockGen. DO NOT EDIT.
// Source: integration/contract.go

// Package mock_integration is a generated GoMock package.
package mock_integration

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockInfoTestIntegration is a mock of InfoTestIntegration interface.
type MockInfoTestIntegration struct {
	ctrl     *gomock.Controller
	recorder *MockInfoTestIntegrationMockRecorder
}

// MockInfoTestIntegrationMockRecorder is the mock recorder for MockInfoTestIntegration.
type MockInfoTestIntegrationMockRecorder struct {
	mock *MockInfoTestIntegration
}

// NewMockInfoTestIntegration creates a new mock instance.
func NewMockInfoTestIntegration(ctrl *gomock.Controller) *MockInfoTestIntegration {
	mock := &MockInfoTestIntegration{ctrl: ctrl}
	mock.recorder = &MockInfoTestIntegrationMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInfoTestIntegration) EXPECT() *MockInfoTestIntegrationMockRecorder {
	return m.recorder
}

// GetInfo mocks base method.
func (m *MockInfoTestIntegration) GetInfo() (interface{}, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInfo")
	ret0, _ := ret[0].(interface{})
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetInfo indicates an expected call of GetInfo.
func (mr *MockInfoTestIntegrationMockRecorder) GetInfo() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInfo", reflect.TypeOf((*MockInfoTestIntegration)(nil).GetInfo))
}
